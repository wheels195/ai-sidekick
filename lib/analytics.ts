// Analytics event tracking for business intelligence\n// Track key user actions across the platform\n\ndeclare global {\n  interface Window {\n    gtag: (...args: any[]) => void\n  }\n}\n\n// Business Event Types\nexport const ANALYTICS_EVENTS = {\n  // User Journey\n  SIGNUP_STARTED: 'signup_started',\n  SIGNUP_COMPLETED: 'signup_completed',\n  LOGIN_COMPLETED: 'login_completed',\n  PROFILE_COMPLETED: 'profile_completed',\n  \n  // Chat & Features\n  FIRST_CONVERSATION: 'first_conversation',\n  CONVERSATION_STARTED: 'conversation_started',\n  TOOL_USED: 'tool_used',\n  FILE_UPLOADED: 'file_uploaded',\n  IMAGE_GENERATED: 'image_generated',\n  \n  // Engagement\n  TRIAL_LIMIT_REACHED: 'trial_limit_reached',\n  FEATURE_DISCOVERY: 'feature_discovery',\n  HELP_VIEWED: 'help_viewed',\n  \n  // Business Events\n  UPGRADE_INITIATED: 'upgrade_initiated',\n  UPGRADE_COMPLETED: 'upgrade_completed',\n  SUBSCRIPTION_CANCELLED: 'subscription_cancelled'\n} as const\n\n// Track custom business events\nexport function trackEvent(\n  eventName: string, \n  parameters?: {\n    category?: string\n    value?: number\n    user_id?: string\n    business_type?: string\n    feature?: string\n    tool?: string\n    content_type?: string\n    [key: string]: any\n  }\n) {\n  if (typeof window !== 'undefined' && window.gtag) {\n    window.gtag('event', eventName, {\n      custom_parameter: true,\n      ...parameters\n    })\n  }\n  \n  // Also log to console in development\n  if (process.env.NODE_ENV === 'development') {\n    console.log('ðŸ“Š Analytics Event:', eventName, parameters)\n  }\n}\n\n// Track page views with custom data\nexport function trackPageView(url: string, title?: string, userId?: string) {\n  if (typeof window !== 'undefined' && window.gtag) {\n    window.gtag('config', process.env.NEXT_PUBLIC_GA_MEASUREMENT_ID, {\n      page_path: url,\n      page_title: title,\n      user_id: userId\n    })\n  }\n}\n\n// Track conversions with value\nexport function trackConversion(\n  conversionName: string, \n  value?: number, \n  currency: string = 'USD'\n) {\n  if (typeof window !== 'undefined' && window.gtag) {\n    window.gtag('event', 'conversion', {\n      send_to: `${process.env.NEXT_PUBLIC_GA_MEASUREMENT_ID}/${conversionName}`,\n      value: value,\n      currency: currency\n    })\n  }\n}\n\n// Track user engagement with detailed metrics\nexport function trackUserEngagement(\n  userId: string,\n  engagementData: {\n    session_duration?: number\n    conversation_count?: number\n    features_used?: string[]\n    tokens_used?: number\n    cost_generated?: number\n  }\n) {\n  trackEvent('user_engagement', {\n    user_id: userId,\n    category: 'engagement',\n    ...engagementData\n  })\n}\n\n// Track feature usage patterns\nexport function trackFeatureUsage(\n  feature: string,\n  action: string,\n  userId?: string,\n  metadata?: Record<string, any>\n) {\n  trackEvent(ANALYTICS_EVENTS.TOOL_USED, {\n    feature,\n    action,\n    user_id: userId,\n    category: 'feature_usage',\n    ...metadata\n  })\n}\n\n// Track business outcomes\nexport function trackBusinessOutcome(\n  outcome: 'lead_generated' | 'trial_converted' | 'user_retained' | 'churn_prevented',\n  value?: number,\n  userId?: string\n) {\n  trackEvent('business_outcome', {\n    outcome,\n    value,\n    user_id: userId,\n    category: 'business_metrics'\n  })\n}\n\n// Enhanced engagement score tracking\nexport function trackEngagementMilestone(\n  userId: string,\n  milestone: 'first_week' | 'power_user' | 'trial_completion' | 'feature_expert',\n  score: number\n) {\n  trackEvent('engagement_milestone', {\n    user_id: userId,\n    milestone,\n    engagement_score: score,\n    category: 'user_progression'\n  })\n}"